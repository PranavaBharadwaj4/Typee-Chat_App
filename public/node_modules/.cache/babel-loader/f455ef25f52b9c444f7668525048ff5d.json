{"ast":null,"code":"var _jsxFileName = \"/Users/pranava/React/Connect - Implimenting Friend's List/public/src/components/Contacts.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Contacts(_ref) {\n  _s();\n\n  let {\n    contacts,\n    currentUser\n  } = _ref;\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  const [currentUserIcon, setCurrentUserIcon] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n  useEffect(() => {\n    if (currentUser !== undefined) {\n      setCurrentUserName(currentUser.username);\n      setCurrentUserName(currentUser.iconImage);\n    }\n  }, [currentUser]);\n\n  const changeCurrentContacts = (index, chat) => {};\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: currentUserIcon && currentUserName && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contacts-body\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"brand\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: \"\",\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Typee\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(Contacts, \"NgVq4uhZzUKA7OFlJmqlls9Ht0U=\");\n\n_c = Contacts;\nexport default Contacts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Contacts\");","map":{"version":3,"names":["React","useState","useEffect","Contacts","contacts","currentUser","currentUserName","setCurrentUserName","undefined","currentUserIcon","setCurrentUserIcon","currentSelected","setCurrentSelected","username","iconImage","changeCurrentContacts","index","chat"],"sources":["/Users/pranava/React/Connect - Implimenting Friend's List/public/src/components/Contacts.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\n\nfunction Contacts({ contacts, currentUser }) {\n  const [currentUserName, setCurrentUserName] = useState(undefined);\n  const [currentUserIcon, setCurrentUserIcon] = useState(undefined);\n  const [currentSelected, setCurrentSelected] = useState(undefined);\n  useEffect(() => {\n    if (currentUser !== undefined) {\n      setCurrentUserName(currentUser.username);\n      setCurrentUserName(currentUser.iconImage);\n    }\n  }, [currentUser]);\n\n  const changeCurrentContacts = (index, chat) => {};\n\n  return (\n    <>\n      {currentUserIcon && currentUserName && (\n        <div className=\"contacts-body\">\n          <div className=\"brand\">\n            <img src=\"\" alt=\"\" />\n            <h3>Typee</h3>\n          </div>\n        </div>\n      )}\n    </>\n  );\n}\n\nexport default Contacts;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;;AAEA,SAASC,QAAT,OAA6C;EAAA;;EAAA,IAA3B;IAAEC,QAAF;IAAYC;EAAZ,CAA2B;EAC3C,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCN,QAAQ,CAACO,SAAD,CAAtD;EACA,MAAM,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCT,QAAQ,CAACO,SAAD,CAAtD;EACA,MAAM,CAACG,eAAD,EAAkBC,kBAAlB,IAAwCX,QAAQ,CAACO,SAAD,CAAtD;EACAN,SAAS,CAAC,MAAM;IACd,IAAIG,WAAW,KAAKG,SAApB,EAA+B;MAC7BD,kBAAkB,CAACF,WAAW,CAACQ,QAAb,CAAlB;MACAN,kBAAkB,CAACF,WAAW,CAACS,SAAb,CAAlB;IACD;EACF,CALQ,EAKN,CAACT,WAAD,CALM,CAAT;;EAOA,MAAMU,qBAAqB,GAAG,CAACC,KAAD,EAAQC,IAAR,KAAiB,CAAE,CAAjD;;EAEA,oBACE;IAAA,UACGR,eAAe,IAAIH,eAAnB,iBACC;MAAK,SAAS,EAAC,eAAf;MAAA,uBACE;QAAK,SAAS,EAAC,OAAf;QAAA,wBACE;UAAK,GAAG,EAAC,EAAT;UAAY,GAAG,EAAC;QAAhB;UAAA;UAAA;UAAA;QAAA,QADF,eAEE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAFF;MAAA;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAFJ,iBADF;AAYD;;GAzBQH,Q;;KAAAA,Q;AA2BT,eAAeA,QAAf"},"metadata":{},"sourceType":"module"}