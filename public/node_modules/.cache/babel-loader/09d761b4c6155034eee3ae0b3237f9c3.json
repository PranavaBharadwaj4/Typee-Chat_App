{"ast":null,"code":"var _jsxFileName = \"/Users/pranava/React/Connect - Implimenting Friend's List/public/src/pages/SetIcon.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport { registerRoute } from \"../utils/APIRoutes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction SetIcon() {\n  _s();\n\n  const api = \"https://api.multiavatar.com/45678945\";\n  const navigate = useNavigate();\n  const [icons, setIcons] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedIcon, setSelectedIcon] = useState(undefined);\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoclose: 6000,\n    pauseOnHover: true,\n    dragable: true,\n    theme: \"colored\",\n    closeOnClick: true\n  };\n\n  const setProfilePicture = async () => {};\n\n  useEffect(() => {\n    const data = [];\n\n    for (let i = 0; i < 4; i++) {\n      const image = axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\n      const buffer = new Buffer(image.data);\n      data.push(buffer.toString(\"base64\"));\n    }\n\n    setIcons(data);\n    setIsLoading(false);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [!isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"iconContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"title-container\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Pick an Avatar For Your Profile\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"icons\",\n        children: icons.map((icon, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `icon ${selectedAvatar === index ? \"selected\" : \"\"}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"loading\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(SetIcon, \"m37oX3xkKY9YuPt9CddN12GW7Zo=\", false, function () {\n  return [useNavigate];\n});\n\n_c = SetIcon;\nexport default SetIcon;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetIcon\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","ToastContainer","toast","axios","registerRoute","SetIcon","api","navigate","icons","setIcons","isLoading","setIsLoading","selectedIcon","setSelectedIcon","undefined","toastOptions","position","autoclose","pauseOnHover","dragable","theme","closeOnClick","setProfilePicture","data","i","image","get","Math","round","random","buffer","Buffer","push","toString","map","icon","index","selectedAvatar"],"sources":["/Users/pranava/React/Connect - Implimenting Friend's List/public/src/pages/SetIcon.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport axios from \"axios\";\nimport { registerRoute } from \"../utils/APIRoutes\";\n\nfunction SetIcon() {\n  const api = \"https://api.multiavatar.com/45678945\";\n  const navigate = useNavigate();\n  const [icons, setIcons] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [selectedIcon, setSelectedIcon] = useState(undefined);\n\n  const toastOptions = {\n    position: \"bottom-right\",\n    autoclose: 6000,\n    pauseOnHover: true,\n    dragable: true,\n    theme: \"colored\",\n    closeOnClick: true,\n  };\n  const setProfilePicture = async () => {};\n  useEffect(() => {\n    const data = [];\n    for (let i = 0; i < 4; i++) {\n      const image = axios.get(`${api}/${Math.round(Math.random() * 1000)}`);\n      const buffer = new Buffer(image.data);\n      data.push(buffer.toString(\"base64\"));\n    }\n    setIcons(data);\n    setIsLoading(false);\n  }, []);\n\n  return (\n    <>\n      {!isLoading ? (\n        <div className=\"iconContainer\">\n          <div className=\"title-container\">\n            <h1>Pick an Avatar For Your Profile</h1>\n          </div>\n          <div className=\"icons\">\n            {icons.map((icon, index) => {\n              return (\n                <div\n                  className={`icon ${\n                    selectedAvatar === index ? \"selected\" : \"\"\n                  }`}\n                ></div>\n              );\n            })}\n          </div>\n        </div>\n      ) : (\n        <div class=\"loading\">\n          <div class=\"circle\"></div>\n          <div class=\"circle\"></div>\n          <div class=\"circle\"></div>\n        </div>\n      )}\n      <ToastContainer />\n    </>\n  );\n}\n\nexport default SetIcon;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,SAASC,cAAT,EAAyBC,KAAzB,QAAsC,gBAAtC;AACA,OAAO,uCAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,aAAT,QAA8B,oBAA9B;;;;AAEA,SAASC,OAAT,GAAmB;EAAA;;EACjB,MAAMC,GAAG,GAAG,sCAAZ;EACA,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;EACA,MAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAAC,EAAD,CAAlC;EACA,MAAM,CAACY,SAAD,EAAYC,YAAZ,IAA4Bb,QAAQ,CAAC,IAAD,CAA1C;EACA,MAAM,CAACc,YAAD,EAAeC,eAAf,IAAkCf,QAAQ,CAACgB,SAAD,CAAhD;EAEA,MAAMC,YAAY,GAAG;IACnBC,QAAQ,EAAE,cADS;IAEnBC,SAAS,EAAE,IAFQ;IAGnBC,YAAY,EAAE,IAHK;IAInBC,QAAQ,EAAE,IAJS;IAKnBC,KAAK,EAAE,SALY;IAMnBC,YAAY,EAAE;EANK,CAArB;;EAQA,MAAMC,iBAAiB,GAAG,YAAY,CAAE,CAAxC;;EACAvB,SAAS,CAAC,MAAM;IACd,MAAMwB,IAAI,GAAG,EAAb;;IACA,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,CAApB,EAAuBA,CAAC,EAAxB,EAA4B;MAC1B,MAAMC,KAAK,GAAGtB,KAAK,CAACuB,GAAN,CAAW,GAAEpB,GAAI,IAAGqB,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,IAA3B,CAAiC,EAArD,CAAd;MACA,MAAMC,MAAM,GAAG,IAAIC,MAAJ,CAAWN,KAAK,CAACF,IAAjB,CAAf;MACAA,IAAI,CAACS,IAAL,CAAUF,MAAM,CAACG,QAAP,CAAgB,QAAhB,CAAV;IACD;;IACDxB,QAAQ,CAACc,IAAD,CAAR;IACAZ,YAAY,CAAC,KAAD,CAAZ;EACD,CATQ,EASN,EATM,CAAT;EAWA,oBACE;IAAA,WACG,CAACD,SAAD,gBACC;MAAK,SAAS,EAAC,eAAf;MAAA,wBACE;QAAK,SAAS,EAAC,iBAAf;QAAA,uBACE;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA,QADF,eAIE;QAAK,SAAS,EAAC,OAAf;QAAA,UACGF,KAAK,CAAC0B,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;UAC1B,oBACE;YACE,SAAS,EAAG,QACVC,cAAc,KAAKD,KAAnB,GAA2B,UAA3B,GAAwC,EACzC;UAHH;YAAA;YAAA;YAAA;UAAA,QADF;QAOD,CARA;MADH;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA,QADD,gBAkBC;MAAK,KAAK,EAAC,SAAX;MAAA,wBACE;QAAK,KAAK,EAAC;MAAX;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,KAAK,EAAC;MAAX;QAAA;QAAA;QAAA;MAAA,QAFF,eAGE;QAAK,KAAK,EAAC;MAAX;QAAA;QAAA;QAAA;MAAA,QAHF;IAAA;MAAA;MAAA;MAAA;IAAA,QAnBJ,eAyBE,QAAC,cAAD;MAAA;MAAA;MAAA;IAAA,QAzBF;EAAA,gBADF;AA6BD;;GAxDQ/B,O;UAEUL,W;;;KAFVK,O;AA0DT,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}